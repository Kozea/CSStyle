#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# This file is part of CSStyle
# Copyright Â© 2010 Kozea
#
# This library is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CSStyle.  If not, see <http://www.gnu.org/licenses/>.

"""
CSStyle entry point.

Launch CSStyle according to configuration and command-line
arguments.

"""
from __future__ import print_function
import os
import sys
import optparse
import copy

import csstyle

# Get command-line options
def run():
    parser = optparse.OptionParser(usage= 'csstyle file [file[..]] [options]')
    parser.add_option(
        "-v", "--version", action="store_true",
        default=False,
        help="show version and exit")
    parser.add_option(
        "-b", "--browser", action="append",
        dest="browser",
        help="select specific browser engine")
    parser.add_option(
        "-s", "--strip", action="store_true",
        help="if specified, output will only include modified lines")
    options, args = parser.parse_args()

    if options.version:
        print(csstyle.VERSION)
        sys.exit()

    if not options.browser:
        options.browser = csstyle.BROWSERS

    print("/* Generated by CSStyle */\n\n", end='')

    for option in args:
        parser = csstyle.Parser(option)
        for engine in options.browser:
            browser_parser= getattr(csstyle, engine)
            print(browser_parser.transform(copy.deepcopy(parser), 
                                          keep_existant=(not options.strip)), end='')
                                          
if __name__ == '__main__':
    run()
